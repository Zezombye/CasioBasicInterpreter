programExamples["syntaxColorationTest"] = [
    {
        "type": "program",
        "name": "Syntax coloration test",
        "content": "#This is a syntax coloration test.\n#These lines should appear in preprocessor color, even with \"strings\", &entities; and 'comments.\n'This is a comment. It should appear in comment color, even with \"strings\", &entities; and #preprocessor.\n'Comments stop when there is a new line, but also with a colon: this should not be colored.\n'These keywords should be colored the same.\nIf Then Else IfEnd For To Step Next Do LpWhile While WhileEnd Prog Return Stop Break Goto Lbl\n=> :\n&disp; ◢\n'These operators should be colored the same.\n~ + - * / ^ < > = != ? -> <= >=\nAnd Or Xor Not Rmdr\nOptional: [] {} () ,\n&femto;&pico;&nano;&micro;&kilo;&mega;&giga;&tera;&peta;&exa;\nµ\n&neg; &E; &_10; &sqrt; &cbrt; &nth_root; &nCr; &nPr; &frac; &^-1; &^2; &angle;\n﹣   √ √ √   ⌟  ² ∠\n'Variables & numbers\n{&pi;&i;, π, ﹣3.59}->List 14\nMat A\nVct B\nStr 20\nAns &r; &theta;  θ\na0 a1 a2 anStart b0 b1 b2 bnStart c0 c1 c2 cnStart\na a a b b b c c c\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n'Entities\n&entity; &!!; &#CFAB; &...; &%_disp; &+-; &-+; this should not be colored &,; &<<; &//; &/\; &||_strike; &; &should_be_colored\n'Functions that can conflict with coloration\nS-L-Normal S-L-Thick S-L-Broken S-L-Dot S-Gph1 S-Gph2 S-Gph3 S-WindAuto S-WindMan G-Connect G-Plot F-Line S-L-Thin List->Mat( Mat->List( 1-Variable 2-Variable S-Gph1 S-Gph2 S-Gph3 BG-None BG-Pict StoV-Win RclV-Win Exp->Str\n\"String with an &entity; inside that should be colored (including &neg; and &disp;). Also, no 'comments or #preprocessor. Watch for \\\\\\\"backslashes.\\\\\" This should not be colored.\n\"This string should be colored, even though there is no closing quote.\nCareful: 'Comments can begin anywhere on the line,\nhowever #preprocessor cannot! This line should not be colored.\n",
    }
]